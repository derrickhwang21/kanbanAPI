{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteCLick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","intialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","acceptanceCriteria","onDeleteClick","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","summary","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3128c2af.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try{\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    }catch (error){\r\n        history.push(\"/dashboard\")\r\n    }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if(window.confirm(\"Are you sure? This will delete the project and all the data related to it\"\r\n    ))\r\n    {\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type:DELETE_PROJECT,\r\n            payload: id\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\"\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteCLick = id => {\r\n        this.props.deleteProject(id);\r\n    };\r\n\r\n    render() {\r\n        const { project } = this.props;\r\n        return ( \r\n            <div className=\"container\">\r\n                        <div className=\"card card-body bg-light mb-3\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\">\r\n                                    <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-4 col-8\">\r\n                                    <h3>{project.projectName}</h3>\r\n                                    <p>{project.description}</p>\r\n                                </div>\r\n                                <div className=\"col-md-4 d-none d-lg-block\">\r\n                                    <ul className=\"list-group\">\r\n                                        <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                            <li className=\"list-group-item board\">\r\n                                                <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                            </li>\r\n                                        </Link>\r\n                                        <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                            <li className=\"list-group-item update\">\r\n                                                <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                                            </li>\r\n                                        </Link>\r\n                                        <li className=\"list-group-item delete\" onClick={this.onDeleteCLick.bind(\r\n                                            this,project.projectIdentifier)}>\r\n                                            <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteProject})(ProjectItem);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n            Create a Project\r\n        </Link>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CreateProjectButton;","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport {connect} from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const {projects} = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                    <CreateProjectButton />\r\n                    <br />\r\n                    <hr />\r\n                    {projects.map(project=> (\r\n                      <ProjectItem key={project.id} project={project} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project:state.project,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try{\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n\r\n    try{\r\n    \r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        // extract token from res.data\r\n        const {token} = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // set our token in header \r\n        setJWTToken(token);\r\n        // decode token on React\r\n        const decoded = jwt_decode(token);\r\n        // dispatch to securityReducer\r\n\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n};","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/securityActions\";\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            <i className=\"fas fa-user-circle mr-1\" />\r\n                            {user.fullName}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            to=\"/logout\"\r\n                            onClick={this.logout.bind(this)}\r\n                        >\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Derrick's Management Tool\r\n                    </Link>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#mobile-nav\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect( mapStateToProps,{ logout })(Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //life cycle hooks\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n\r\n        };\r\n\r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n  render() {\r\n    const {errors} = this.state\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.projectName\r\n                            })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange}/>\r\n                            {errors.projectName && (\r\n                                <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.projectIdentifier\r\n                            })} placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange}/>\r\n                            {errors.projectIdentifier && (\r\n                                <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.description\r\n                            })} placeholder=\"Project Description\" name=\"description\" value={this.state.description} onChange={this.onChange}></textarea>\r\n                            {errors.description && (\r\n                                <div className=\"invalid-feedback\">{errors.description}</div>\r\n                            )}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" value={this.state.start_date} onChange={this.onChange}/>\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" value={this.state.end_date} onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {createProject}) (AddProject);","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n        return {\r\n            ...state,\r\n            projects:action.payload\r\n        };\r\n        case GET_PROJECT:\r\n        return{\r\n            ...state,\r\n            project:action.payload\r\n        };\r\n        case DELETE_PROJECT:\r\n        return{\r\n            ...state,\r\n            projects: state.projects.filter(project=>project.projectIdentifier !== action.payload)\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n","import {  GET_BACKLOG,  GET_PROJECT_TASK,  DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst intialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state=intialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_BACKLOG:\r\n        return{\r\n            ...state,\r\n            project_tasks: action.payload\r\n        };\r\n\r\n        case GET_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_task:action.payload\r\n        };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n        return {\r\n            ...state,\r\n            project_tasks: state.project_tasks.filter(\r\n                project_task => project_task.projectSequence !== action.payload\r\n            )\r\n        };\r\n\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if(payload){\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case SET_CURRENT_USER:\r\n        return {\r\n            ...state,\r\n            validToken: booleanActionPayload(action.payload),\r\n            user: action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\n\r\nexport default combineReducers ({\r\n    errors:errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\" && ReactReduxDevTools)){\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleWare),ReactReduxDevTools));\r\n} else{\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleWare)));\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { GET_ERRORS } from '../../actions/types';\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            id:\"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const UpdateProject = {\r\n            id:this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date,\r\n        };\r\n\r\n        this.props.createProject(UpdateProject, this.props.history)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n    <div className=\"project\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.projectName\r\n                            })} \r\n                            placeholder=\"Project Name\" \r\n                            name=\"projectName\"\r\n                            value={this.state.projectName}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.projectName && (\r\n                                <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                            )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.projectIdentifier\r\n                            })}  \r\n                            placeholder=\"Unique Project ID\"\r\n                            value={this.state.projectIdentifier}\r\n                            onChange={this.onChange}\r\n                            disabled />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.description\r\n                            })}  \r\n                            name=\"description\"\r\n                            placeholder=\"Project Description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}></textarea>\r\n                            {errors.description && (\r\n                                <div className=\"invalid-feedback\">{errors.description}</div>\r\n                            )}\r\n                    </div>\r\n                    <h6>Start Date</h6>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"date\" \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.start_date\r\n                            })}  \r\n                            name=\"start_date\"\r\n                            value={this.state.start_date}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n                    <h6>Estimated End Date</h6>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"date\" \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.end_date\r\n                            })}  \r\n                            name=\"end_date\"\r\n                            value={this.state.end_date}\r\n                            onChange={this.onChange}/>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    )}\r\n}\r\n\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst maptStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(maptStateToProps, {getProject, createProject })(UpdateProject);","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const {project_task} = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if(project_task.priority === 1){\r\n      priorityClass = \"bg-danger text-light\"\r\n      priorityString = \"HIGH\"\r\n    }\r\n    if(project_task.priority === 2){\r\n      priorityClass = \"bg-warning text-light\"\r\n      priorityString = \"MEDIUM\"\r\n    }\r\n    if(project_task.priority === 3){\r\n      priorityClass = \"bg-info text-light\"\r\n      priorityString = \"LOW\"\r\n    }\r\n    return (\r\n\r\n        <div className=\"card mb-1 bg-light\">\r\n          <div className={`card-header text-primary ${priorityClass}`}>\r\n            ID: {project_task.projectSequence} -- Priority:{priorityString}\r\n          </div>\r\n          <div className=\"card-body bg-light\">\r\n            <h5 className=\"card-title\">project_task.summary</h5>\r\n            <p className=\"card-text text-truncate \">\r\n              {project_task.acceptanceCriteria}\r\n            </p>\r\n            <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\">\r\n              View / Update\r\n            </Link>\r\n\r\n            <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(this,project_task.projectIdentifier,project_task.projectSequence)}\r\n            >\r\n            Delete\r\n          </button>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nProjectTask.propTypes = {deleteProjectTask: PropTypes.func.isRequired};export default connect(null,{ deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {GET_ERRORS,GET_BACKLOG,GET_PROJECT_TASK,DELETE_PROJECT_TASK} from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch =>{\r\n    try{\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n    } catch (err){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (\r\n        window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)\r\n    ) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const {project_tasks_prop} = this.props;\r\n    const tasks = project_tasks_prop.map(project_task =>(\r\n      <ProjectTask key={project_task.id} project_task={project_task}/>\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for(let i=0; i<tasks.length; i++){\r\n      if(tasks[i].props.project_task.status === \"TO_DO\"){\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if(tasks[i].props.project_task.status === \"DONE\"){\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getBacklog} from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    this.props.getBacklog(id)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const {project_tasks} = this.props.backlog;\r\n    const {errors} = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if(project_tasks.length < 1){\r\n        if(errors.projectNotFound){\r\n          return(\r\n            <div className=\"alert alert-danger text-center role\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return(\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No Project Tasks on this board\r\n          </div>\r\n          )\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks}/>\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog:PropTypes.object.isRequired,\r\n  getBacklog:PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog:state.backlog,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {addProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        const {id} = this.props.match.params;\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors:{}\r\n\r\n        };\r\n\r\n    this.onChange=this.onChange.bind(this);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newTask={\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n        }\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n    }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const {errors} = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\",{\r\n                        \"is-invalid\":errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                      errors.summary && (\r\n                          <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                      )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps=state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {getProjectTask,updateProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            created_At: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            created_At: this.state.created_At\r\n        };\r\n\r\n        this.props.updateProjectTask(\r\n            this.state.projectIdentifier,\r\n            this.state.projectSequence,\r\n            UpdateProjectTask,\r\n            this.props.history\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link\r\n                                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                                className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">\r\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                                {this.state.projectSequence}{\" \"}\r\n                            </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-4\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Derrick's Own Kanban Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start you own\r\n                                </p>\r\n                                <hr />\r\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n  render() {\r\n      const {errors} = this.state;\r\n    return (\r\n        <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                    <p className=\"lead text-center\">Create your Account</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.fullName})} \r\n                                placeholder=\"Full Name\" \r\n                                name=\"fullName\"\r\n                                value={this.state.fullName}\r\n                                onChange ={this.onChange} />\r\n                                {\r\n                                    errors.fullName && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                    )\r\n                                }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.username\r\n                                })} \r\n                                placeholder=\"Email Address (Username)\" \r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange ={this.onChange} />\r\n                                {\r\n                                    errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )\r\n                                }\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.password\r\n                                })} \r\n                                placeholder=\"Password\" \r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange ={this.onChange} />\r\n                                {\r\n                                    errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )\r\n                                }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.confirmPassword\r\n                                })} \r\n                                placeholder=\"Confirm Password\"\r\n                                name=\"confirmPassword\"\r\n                                value={this.state.confirmPassword}\r\n                                onChange ={this.onChange} />\r\n                                {\r\n                                    errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                    )\r\n                                }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n\r\n        this.props.login(LoginRequest);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({component:Component, security, ...otherProps}) => (\r\n    <Route {...otherProps} render = {props => security.validToken === true ? \r\n        (<Component {...props}/>) :\r\n        (<Redirect to=\"login\"/>)\r\n        }\r\n    />\r\n\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute)","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken\n\nif(jwtToken){\n  setJWTToken(jwtToken)\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href= \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public Routes\n            }\n\n            <Route exact path=\"/\" component = {Landing}/>\n            <Route exact path=\"/register\" component = {Register}/>\n            <Route exact path=\"/login\" component = {Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard}/>\n              <SecuredRoute exact path=\"/addProject\" component={AddProject}/>\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject}/>\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n              <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}